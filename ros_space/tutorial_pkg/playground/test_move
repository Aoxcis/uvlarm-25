#!/usr/bin/python3
import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
from std_msgs.msg import String
import time
print("test_move :: START...")

class ROSTalker:
    def __init__(self, rosNode):
        self._publisher = rosNode.create_publisher(Twist, '/multi/cmd_nav', 10)
        self._timer = rosNode.create_timer(5.0, self.timer_callback)

    def timer_callback(self):
        velocity = Twist()
        velocity.linear.x = 2
        self._publisher.publish(velocity)
        time.sleep(1)
        # Move backward
        velocity.linear.x = -2
        self._publisher.publish(velocity)
        time.sleep(1)
        print('arr')
        # Turn right
        velocity.angular.z = -2
        self._publisher.publish(velocity)
        time.sleep(1)
        velocity.angular.z = 2
        self._publisher.publish(velocity)
        time.sleep(1)       
        velocity.linear.x = 0.0
        velocity.angular.z = 0.0
        self._publisher.publish(velocity)

def infiniteTalk():
    # Initialize ROS node with ROS client
    rclpy.init()
    aNode = Node("avance")
    talker = ROSTalker(aNode)
    # Start infinite loop
    rclpy.spin(aNode)
    # Clean everything and switch the light off
    aNode.destroy_node()
    rclpy.shutdown()

# Execute the function.
if __name__ == "__main__":
    infiniteTalk()
    print('fin')
