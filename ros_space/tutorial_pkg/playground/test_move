#!/usr/bin/python3
import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
from std_msgs.msg import String
import time
print("test_move :: START...")
pi =7.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
class ROSTalker:
    def __init__(self, rosNode):
        self._publisher = rosNode.create_publisher(Twist, '/multi/cmd_nav', 10)
        self._timer = rosNode.create_timer(3.0, self.timer_callback)

    def timer_callback(self):
        velocity = Twist()
        for _ in range(4):
            velocity.linear.x = 0.5
            velocity.angular.z = 0.0
            self._publisher.publish(velocity)
            time.sleep(1) 
            velocity.linear.x = 0.0
            self._publisher.publish(velocity)
            time.sleep(1)
            velocity.angular.z = pi # demi tour


            self._publisher.publish(velocity)
            time.sleep(1)  
            velocity.angular.z = 0.0
            self._publisher.publish(velocity)
            time.sleep(1)

def infiniteTalk():
    # Initialize ROS node with ROS client
    rclpy.init()
    aNode = Node("avance")
    talker = ROSTalker(aNode)
    # Start infinite loop
    rclpy.spin(aNode)
    # Clean everything and switch the light off
    aNode.destroy_node()
    rclpy.shutdown()

# Execute the function.
if __name__ == "__main__":
    infiniteTalk()
    print('fin')
